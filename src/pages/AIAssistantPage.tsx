import { useState, useRef, useEffect } from 'react';
import Navigation from '../components/Navigation';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface Message {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  timestamp: Date;
}

interface Subscription {
  type: 'none' | 'single' | 'monthly' | 'yearly';
  expiresAt?: Date;
  requestsLeft?: number;
}

export default function AIAssistantPage() {
  const { toast } = useToast();
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      role: 'assistant',
      content: '–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ê–¥–∞–ø—Ç–µ—Ä –†–∞–±–æ—Ç, —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –ø–æ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–º –ø—Ä–æ–µ–∫—Ç–∞–º. –†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∫—É–ø–ª–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –í–£–ó–∞ ‚Äî —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —à–∞–≥ –∑–∞ —à–∞–≥–æ–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—ë. –ü–æ–º–Ω–∏: —è —É—á—É, –∞ –Ω–µ –¥–µ–ª–∞—é –∑–∞ —Ç–µ–±—è! üìö','
      timestamp: new Date()
    }
  ]);
  const [inputValue, setInputValue] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [subscription, setSubscription] = useState<Subscription>({ type: 'none' });
  const [showPricingModal, setShowPricingModal] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const textareaRef = useRef<HTMLTextAreaElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const handleSendMessage = async () => {
    if (!inputValue.trim()) return;

    if (subscription.type === 'none') {
      setShowPricingModal(true);
      return;
    }

    if (subscription.type === 'single' && subscription.requestsLeft === 0) {
      toast({
        title: '–ó–∞–ø—Ä–æ—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å',
        description: '–†–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∏—Å—á–µ—Ä–ø–∞–Ω. –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.',
        variant: 'destructive'
      });
      setShowPricingModal(true);
      return;
    }

    const userMessage: Message = {
      id: Date.now().toString(),
      role: 'user',
      content: inputValue,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsLoading(true);

    try {
      const chatHistory = [...messages, userMessage].map(msg => ({
        role: msg.role,
        content: msg.content
      }));

      const response = await fetch('https://functions.poehali.dev/080d86fb-5678-411e-bef2-e4c81606015a', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          messages: chatHistory
        })
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò');
      }

      const assistantMessage: Message = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: data.message,
        timestamp: new Date()
      };
      
      setMessages(prev => [...prev, assistantMessage]);

      if (subscription.type === 'single' && subscription.requestsLeft) {
        setSubscription(prev => ({
          ...prev,
          requestsLeft: (prev.requestsLeft || 0) - 1
        }));
      }
    } catch (error) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: error instanceof Error ? error.message : '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò',
        variant: 'destructive'
      });
      
      setMessages(prev => prev.slice(0, -1));
    } finally {
      setIsLoading(false);
    }
  };

  const handleKeyDown = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const formatTime = (date: Date) => {
    return date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });
  };

  const getSubscriptionBadge = () => {
    if (subscription.type === 'none') {
      return <Badge variant="secondary">–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏</Badge>;
    }
    if (subscription.type === 'single') {
      return <Badge variant="outline">–†–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø ({subscription.requestsLeft} –∑–∞–ø—Ä–æ—Å–æ–≤)</Badge>;
    }
    if (subscription.type === 'monthly') {
      return <Badge className="bg-gradient-to-r from-purple-500 to-pink-500">–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</Badge>;
    }
    if (subscription.type === 'yearly') {
      return <Badge className="bg-gradient-to-r from-blue-500 to-cyan-500">–ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ ‚≠ê</Badge>;
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-white to-blue-50">
      <Navigation />
      
      <div className="container mx-auto px-4 pt-24 pb-8 max-w-6xl">
        <div className="mb-6 flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold mb-2 flex items-center gap-3">
              <Icon name="Bot" size={36} className="text-primary" />
              –ê–¥–∞–ø—Ç–µ—Ä –†–∞–±–æ—Ç
            </h1>
            <p className="text-muted-foreground">
              –ü–æ–º–æ–≥—É –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –∫—É–ø–ª–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –ø–æ–¥ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ç–≤–æ–µ–≥–æ –í–£–ó–∞
            </p>
          </div>
          <div className="flex items-center gap-3">
            {getSubscriptionBadge()}
            <Button 
              variant="outline" 
              onClick={() => setShowPricingModal(true)}
            >
              <Icon name="CreditCard" size={16} className="mr-2" />
              –¢–∞—Ä–∏—Ñ—ã
            </Button>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          <div className="lg:col-span-3">
            <Card className="h-[calc(100vh-280px)] flex flex-col">
              <CardContent className="flex-1 overflow-y-auto p-6 space-y-4">
                {messages.map((message) => (
                  <div
                    key={message.id}
                    className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
                  >
                    <div
                      className={`max-w-[80%] rounded-2xl px-4 py-3 ${
                        message.role === 'user'
                          ? 'bg-primary text-primary-foreground'
                          : 'bg-muted'
                      }`}
                    >
                      <div className="flex items-start gap-2">
                        {message.role === 'assistant' && (
                          <Icon name="Bot" size={20} className="mt-1 flex-shrink-0" />
                        )}
                        <div className="flex-1">
                          <p className="text-sm whitespace-pre-wrap">{message.content}</p>
                          <span className={`text-xs mt-2 block ${
                            message.role === 'user' ? 'text-primary-foreground/70' : 'text-muted-foreground'
                          }`}>
                            {formatTime(message.timestamp)}
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
                {isLoading && (
                  <div className="flex justify-start">
                    <div className="bg-muted rounded-2xl px-4 py-3">
                      <div className="flex items-center gap-2">
                        <Icon name="Bot" size={20} />
                        <div className="flex gap-1">
                          <span className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{ animationDelay: '0ms' }}></span>
                          <span className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{ animationDelay: '150ms' }}></span>
                          <span className="w-2 h-2 bg-primary rounded-full animate-bounce" style={{ animationDelay: '300ms' }}></span>
                        </div>
                      </div>
                    </div>
                  </div>
                )}
                <div ref={messagesEndRef} />
              </CardContent>

              <div className="border-t p-4">
                <div className="flex gap-2">
                  <Textarea
                    ref={textareaRef}
                    value={inputValue}
                    onChange={(e) => setInputValue(e.target.value)}
                    onKeyDown={handleKeyDown}
                    placeholder={
                      subscription.type === 'none'
                        ? '–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã...'
                        : '–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å... (Enter - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, Shift+Enter - –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞)'
                    }
                    className="resize-none"
                    rows={3}
                    disabled={subscription.type === 'none'}
                  />
                  <Button
                    onClick={handleSendMessage}
                    disabled={!inputValue.trim() || isLoading || subscription.type === 'none'}
                    size="icon"
                    className="h-auto px-4"
                  >
                    <Icon name="Send" size={20} />
                  </Button>
                </div>
              </div>
            </Card>
          </div>

          <div className="space-y-4">
            <Card className="bg-gradient-to-br from-blue-50 to-purple-50 border-blue-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-lg">
                  <Icon name="Lightbulb" size={20} className="text-yellow-500" />
                  –ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3 text-sm">
                <div className="flex items-start gap-2">
                  <Icon name="CheckCircle" size={16} className="text-green-600 mt-0.5 flex-shrink-0" />
                  <p>–ü–æ–º–æ–≥–∞—é –ø–æ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–∞–±–æ—Ç—ã</p>
                </div>
                <div className="flex items-start gap-2">
                  <Icon name="CheckCircle" size={16} className="text-green-600 mt-0.5 flex-shrink-0" />
                  <p>–ü–æ–¥—Å–∫–∞–∑—ã–≤–∞—é, –∫–∞–∫ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –í–£–ó–∞</p>
                </div>
                <div className="flex items-start gap-2">
                  <Icon name="CheckCircle" size={16} className="text-green-600 mt-0.5 flex-shrink-0" />
                  <p>–£—á—É –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏ —É–ª—É—á—à–∞—Ç—å —Ç–µ–∫—Å—Ç</p>
                </div>
                <div className="flex items-start gap-2">
                  <Icon name="CheckCircle" size={16} className="text-green-600 mt-0.5 flex-shrink-0" />
                  <p>–ù–∞–ø—Ä–∞–≤–ª—è—é, –Ω–æ –Ω–µ –¥–µ–ª–∞—é –∑–∞ —Ç–µ–±—è</p>
                </div>
              </CardContent>
            </Card>

            <Card className="border-orange-200 bg-orange-50/50">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-lg">
                  <Icon name="AlertTriangle" size={20} className="text-orange-600" />
                  –í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-2 text-sm text-muted-foreground">
                <p>‚Ä¢ –Ø –Ω–µ –ø–∏—à—É —Ä–∞–±–æ—Ç—É –∑–∞ —Ç–µ–±—è</p>
                <p>‚Ä¢ –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞—É—á–∏—Ç—å</p>
                <p>‚Ä¢ –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å ‚Äî —Ç–≤–æ—è</p>
                <p>‚Ä¢ –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</p>
              </CardContent>
            </Card>

            <Card className="border-green-200 bg-green-50/50">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-lg">
                  <Icon name="FileText" size={20} className="text-green-600" />
                  –ß—Ç–æ —è —É–º–µ—é
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-2 text-sm">
                <p>üìù –ü–æ–º–æ—â—å —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º</p>
                <p>üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç—ã</p>
                <p>üéØ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è</p>
                <p>‚úçÔ∏è –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ</p>
                <p>üìö –†–∞–±–æ—Ç–∞ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏</p>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>

      {showPricingModal && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
          <Card className="max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            <CardHeader>
              <div className="flex items-center justify-between">
                <div>
                  <CardTitle className="text-2xl">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ</CardTitle>
                  <CardDescription>–î–æ—Å—Ç—É–ø –∫ –ê–¥–∞–ø—Ç–µ—Ä—É –†–∞–±–æ—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏</CardDescription>
                </div>
                <Button
                  variant="ghost"
                  size="icon"
                  onClick={() => setShowPricingModal(false)}
                >
                  <Icon name="X" size={20} />
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <Card className="border-2 hover:border-primary transition-all cursor-pointer">
                  <CardHeader>
                    <Icon name="Zap" size={32} className="text-yellow-500 mb-2" />
                    <CardTitle>–†–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø</CardTitle>
                    <CardDescription>–î–ª—è –æ–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <div className="text-4xl font-bold">500‚ÇΩ</div>
                      <p className="text-sm text-muted-foreground">–ó–∞ –æ–¥–Ω—É —Ä–∞–±–æ—Ç—É</p>
                    </div>
                    <ul className="space-y-2 text-sm">
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
                      </li>
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –î–æ—Å—Ç—É–ø –Ω–∞ 7 –¥–Ω–µ–π
                      </li>
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –î–ª—è –æ–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã
                      </li>
                    </ul>
                    <Button
                      className="w-full"
                      onClick={() => {
                        setSubscription({
                          type: 'single',
                          requestsLeft: 999,
                          expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000)
                        });
                        setShowPricingModal(false);
                        toast({
                          title: '–†–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!',
                          description: '–£ –≤–∞—Å –µ—Å—Ç—å 7 –¥–Ω–µ–π –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –æ–¥–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π.'
                        });
                      }}
                    >
                      –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø
                    </Button>
                  </CardContent>
                </Card>

                <Card className="border-2 border-purple-500 relative hover:shadow-xl transition-all cursor-pointer">
                  <div className="absolute -top-3 left-1/2 -translate-x-1/2">
                    <Badge className="bg-gradient-to-r from-purple-500 to-pink-500">
                      –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä
                    </Badge>
                  </div>
                  <CardHeader>
                    <Icon name="Rocket" size={32} className="text-purple-500 mb-2" />
                    <CardTitle>–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</CardTitle>
                    <CardDescription>–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <div className="text-4xl font-bold">2 990‚ÇΩ</div>
                      <p className="text-sm text-muted-foreground">–í –º–µ—Å—è—Ü</p>
                    </div>
                    <ul className="space-y-2 text-sm">
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
                      </li>
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –õ—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç
                      </li>
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
                      </li>
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–æ 50 –ú–ë
                      </li>
                    </ul>
                    <Button
                      className="w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600"
                      onClick={() => {
                        setSubscription({
                          type: 'monthly',
                          expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)
                        });
                        setShowPricingModal(false);
                        toast({
                          title: '–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! üéâ',
                          description: '–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç 30 –¥–Ω–µ–π.'
                        });
                      }}
                    >
                      –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
                    </Button>
                  </CardContent>
                </Card>

                <Card className="border-2 hover:border-blue-500 transition-all cursor-pointer">
                  <CardHeader>
                    <Icon name="Crown" size={32} className="text-yellow-500 mb-2" />
                    <CardTitle>–ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</CardTitle>
                    <CardDescription>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã–≥–æ–¥–∞</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <div className="text-4xl font-bold">18 000‚ÇΩ</div>
                      <p className="text-sm text-muted-foreground">
                        –í –≥–æ–¥ <span className="text-green-600 font-semibold">(—ç–∫–æ–Ω–æ–º–∏—è 50%)</span>
                      </p>
                    </div>
                    <ul className="space-y-2 text-sm">
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –í—Å—ë –∏–∑ –º–µ—Å—è—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
                      </li>
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –≠–∫–æ–Ω–æ–º–∏—è 17 880‚ÇΩ –≤ –≥–æ–¥
                      </li>
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–æ 100 –ú–ë
                      </li>
                      <li className="flex items-center gap-2">
                        <Icon name="Check" size={16} className="text-green-600" />
                        –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
                      </li>
                    </ul>
                    <Button
                      className="w-full bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600"
                      onClick={() => {
                        setSubscription({
                          type: 'yearly',
                          expiresAt: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000)
                        });
                        setShowPricingModal(false);
                        toast({
                          title: '–ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! ‚≠ê',
                          description: '–ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç 365 –¥–Ω–µ–π.'
                        });
                      }}
                    >
                      –û—Ñ–æ—Ä–º–∏—Ç—å –Ω–∞ –≥–æ–¥
                    </Button>
                  </CardContent>
                </Card>
              </div>

              <div className="mt-6 p-4 bg-blue-50 rounded-lg">
                <p className="text-sm text-center text-muted-foreground">
                  üí≥ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–∑ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π —à–ª—é–∑ –Æ–ö–∞—Å—Å–∞. –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –≤–æ–∑–º–æ–∂–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π.
                </p>
              </div>
            </CardContent>
          </Card>
        </div>
      )}
    </div>
  );
}