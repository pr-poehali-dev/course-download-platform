// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–≤—å—é
const API_URL = 'https://functions.poehali.dev/c5c39645-740b-4fc3-8d3f-d4dc911fae68';
const BATCH_SIZE = 100;

async function syncBatch() {
    const response = await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ limit: BATCH_SIZE })
    });
    return await response.json();
}

async function syncAll() {
    let total = { processed: 0, success: 0, failed: 0 };
    let batchNum = 0;
    
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...');
    
    while (true) {
        batchNum++;
        console.log(`\nüì¶ –ë–∞—Ç—á ${batchNum}...`);
        
        const result = await syncBatch();
        
        total.processed += result.total_processed;
        total.success += result.success;
        total.failed += result.failed;
        
        console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${result.total_processed}, –£—Å–ø–µ—à–Ω–æ: ${result.success}, –û—à–∏–±–æ–∫: ${result.failed}`);
        
        if (result.total_processed < BATCH_SIZE) {
            break;
        }
        
        await new Promise(r => setTimeout(r, 1000));
    }
    
    console.log('\nüéâ –ì–û–¢–û–í–û!');
    console.log(`–í—Å–µ–≥–æ: ${total.processed} | –£—Å–ø–µ—à–Ω–æ: ${total.success} | –û—à–∏–±–æ–∫: ${total.failed}`);
    
    return total;
}

syncAll();
